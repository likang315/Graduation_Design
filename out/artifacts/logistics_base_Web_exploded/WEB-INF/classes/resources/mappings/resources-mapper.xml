<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.mapper.ResourcesMapper">
<!--mybatis ehcache缓存配置  -->
<!-- 以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志
<cache type="org.mybatis.caches.ehcache.LoggingEhcache" /> -->
<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

	<!-- 以下与实体类的中字段一致 -->
	<sql id="selectId">
	id,
	name,
	parentId,
	(select r.name from sys_resources r where r.id = sys_resources.parentId ) parentName,
	resKey,
	type,
	resUrl,
	level,
	description
	</sql>
	
	<select id="queryAll" resultType="Resources" parameterType="Resources">
		select
		<include refid="selectId" />
		from sys_resources 
		where 1=1
		<if test="name != null and name != ''">
				and name like '%${name}%'
				</if>
		<if test="parentId != null">
				and parentId =#{parentId}
		</if>
		order By level asc
	</select>
	
	<select id="queryAllPage" resultType="Resources" parameterType="java.util.Map">
		select
		<include refid="selectId" />
		from sys_resources 
		order By level asc
	</select>
	
	<select id="findAll" resultType="Resources">
		select
		<include refid="selectId" />
		from sys_resources order By level asc
	</select>
	<!-- -->
	<select id="getMaxLevel" resultType="int">
		select max(level)+1  from resources
	</select>
	<!--resultType="Resources" 每返回一条结果封装到Resources里 -->
	<select id="query" resultType="Resources" parameterType="java.util.HashMap">
		select
		<include refid="selectId" />
		from sys_resources
		<where>
			<if test="t.name != null and t.name != ''">
				name like '%${t.name}%'
				</if>
		</where>
		order By level asc
	</select>
	
	<!--查找菜单名称是否是否存在-->
		<select id="isExist" resultType="Resources" parameterType="String">
		select
		<include refid="selectId" />
		from sys_resources
		where name = #{accountName}
	</select>
	<!-- 新增 -->
	<insert id="add" parameterType="Resources">
		insert into sys_resources (
					name,
					parentId,
					resKey,
					type,
					resUrl,
					level,
					description
								) 
		values (
				#{name},
				#{parentId},
				#{resKey},
				#{type},
				#{resUrl},
				#{level},
				#{description}
				)
	</insert>
	
	<!-- 删 -->
	<delete id="delete" parameterType="String">
		delete from sys_resources
		where id=#{id}
	</delete>
	
	<select id="getById" parameterType="String" resultType="Resources">
		SELECT 
		<include refid="selectId" />
		 from sys_resources where id=#{id}
	</select>
	
	<select id="queryByParentId" parameterType="java.util.HashMap" resultType="Resources">
		SELECT 
		<include refid="selectId" />
		 from sys_resources where  type =  convert(#{type},SIGNED) - 1
	</select>
	
	
	<!-- 更新 -->
	<update id="update" parameterType="Resources">
	    update sys_resources
	    set
	    	name = #{name},
	    	parentId = #{parentId},
			resKey = #{resKey},
			type = #{type},
			resUrl = #{resUrl},
			level = #{level},
			description = #{description}
	   where id = #{id}
	</update>
	
	<!-- 更新 -->
	<update id="updateSortOrder" parameterType="Resources">
	    update sys_resources
	    set level = #{level}
	   where id = #{id}
	</update>
	<!-- 根据部门Id获取该用户的权限-->
	<select id="findRoleRes" parameterType="String" resultType="Resources">
		SELECT 
		<include refid="selectId" />
		FROM sys_resources WHERE id in(
		SELECT resc_id FROM
		sys_res_roles WHERE role_id = #{roleId})
		order By level asc
	</select>
	
	<!-- 根据账号Id获取该用户的权限-->
	<select id="findAccountResourcess" parameterType="String" resultType="Resources">
		SELECT 
		<include refid="selectId" />
		FROM sys_resources WHERE id in(
		SELECT resc_id FROM
		sys_res_roles WHERE role_id in(
		SELECT role_id FROM sys_acc_role
		WHERE acc_id=#{id}))
		order By level asc
	</select>
	<!-- 删 -->
	<delete id="deleteResourcesRole" parameterType="String">
		delete from sys_res_roles
		where role_id=#{roleId}
	</delete>
	
	<!-- 删 -->
	<delete id="deleteResourcesGroup" parameterType="String">
		delete from sys_group_resc
		where group_id=#{groupId}
	</delete>
	
	
	<insert id="addRoleRes" parameterType="ResourcesRole">
	insert into sys_res_roles (role_id,resc_id) value (#{roleId},#{resId})
	</insert>
	
	<insert id="addGroupRes" parameterType="ResourcesRole">
	insert into sys_group_resc (group_id,resc_id) value (#{roleId},#{resId})
	</insert>
	
	<!-- 根据账号Id获取该用户信息-->
	<select id="findResourceById" parameterType="String" resultType="Resources">
		SELECT * FROM sys_resources WHERE parentId=#{id} limit 1
	</select>
	<!-- 根据用户Id获取该用户的权限-->
	<select id="getUserResources" parameterType="String" resultType="Resources">
		SELECT 
		<include refid="selectId" />
		FROM sys_resources WHERE id in(
		SELECT resc_id FROM
		sys_res_roles WHERE role_id in(
		SELECT role_id FROM sys_acc_role
		WHERE acc_id=#{id}))
	</select>
	<!-- 根据角色Id获取该角色的权限-->
	<select id="getResourcesByUserName" parameterType="String" resultType="Resources">
		SELECT 
		<include refid="selectId" />
		FROM sys_resources WHERE id in(
		SELECT resc_id FROM
		sys_res_roles WHERE role_id in(
		SELECT role_id FROM sys_acc_role,account
		WHERE acc_id=id and accountName=#{username}))
	</select>
	
	<!-- 根据角色Id获取该角色的权限-->
	<select id="getResourcesByRoleId" parameterType="String" resultType="Resources">
		SELECT 
		<include refid="selectId" />
		 from sys_resources where id in 
		(select resc_id from sys_res_roles where role_id=#{roleId})
	</select>
	
	<!-- 根据组织Id获取该组织的权限-->
	<select id="getResourcesByGroupId" parameterType="String" resultType="Resources">
		SELECT 
		<include refid="selectId" />
		 from sys_resources where id in 
		(select resc_id from sys_group_resc where group_id=#{groupId})
	</select>
	
	
	<!-- 增加角色和权限 -->
	<insert id="saveRoleRescours" parameterType="ResourcesRole">
	insert into sys_res_roles(role_id,resc_id) values (#{roleId},#{resId})
	</insert>
</mapper>